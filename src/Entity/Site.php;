<?php

namespace App\Entity;

use Doctrine\Common\Collections\ArrayCollection;
use Doctrine\Common\Collections\Collection;

/**
 * @ORM\Entity(repositoryClass="App\Repository\SiteRepository")
 */

class Site {
	/**
	 * @ORM\Id()
	 * @ORM\GeneratedValue()
	 * @ORM\Column(type="integer")
	 */
	private $id;

	/**
	 * @ORM\Column(type="string", length=255)
	 */
	private $province;

	/**
	 * @ORM\Column(type="string", length=255)
	 */
	private $region;

	/**
	 * @ORM\Column(type="string", length=255)
	 */
	private $quartier;

	/**
	 * @ORM\Column(type="string", length=255)
	 */
	private $adresse;

	/**
	 * @ORM\OneToMany(targetEntity="App\Entity\Mission", mappedBy="site", orphanRemoval=true,cascade={"persist"})
	 */
	private $missions;

	public function __construct() {
		$this->missions = new ArrayCollection();
	}

	public function getId():?int {
		return $this->id;
	}

	public function getProvince():?string {
		return $this->province;
	}

	public function setProvince(string $province):self {
		$this->province = $province;

		return $this;
	}

	public function getRegion():?string {
		return $this->region;
	}

	public function setRegion(string $region):self {
		$this->region = $region;

		return $this;
	}

	public function getQuartier():?string {
		return $this->quartier;
	}

	public function setQuartier(string $quartier):self {
		$this->quartier = $quartier;

		return $this;
	}

	public function getAdresse():?string {
		return $this->adresse;
	}

	public function setAdresse(string $adresse):self {
		$this->adresse = $adresse;

		return $this;
	}

	/**
	 * @return Collection|Mission[]
	 */
	public function getMissions():Collection {
		return $this->missions;
	}

	public function addMission(Mission $mission):self {
		if (!$this->missions->contains($mission)) {
			$this->missions[] = $mission;
			$mission->setSite($this);
		}

		return $this;
	}

	public function removeMission(Mission $mission):self {
		if ($this->missions->contains($mission)) {
			$this->missions->removeElement($mission);
			// set the owning side to null (unless already changed)
			if ($mission->getSite() === $this) {
				$mission->setSite(null);
			}
		}

		return $this;
	}
}
