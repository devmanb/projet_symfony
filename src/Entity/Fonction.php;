<?php

namespace App\Entity;

use Doctrine\Common\Collections\ArrayCollection;
use Doctrine\Common\Collections\Collection;

/**
 * @ORM\Entity(repositoryClass="App\Repository\FonctionRepository")
 */

class Fonction {
	/**
	 * @ORM\Id()
	 * @ORM\GeneratedValue()
	 * @ORM\Column(type="integer")
	 */
	private $id;

	/**
	 * @ORM\Column(type="string", length=255)
	 */
	private $terme;

	/**
	 * @ORM\OneToMany(targetEntity="App\Entity\User", mappedBy="fonction")
	 */
	private $users;

	public function __construct() {
		$this->users = new ArrayCollection();
	}

	public function getId():?int {
		return $this->id;
	}

	public function getTerme():?string {
		return $this->terme;
	}

	public function setTerme(string $terme):self {
		$this->terme = $terme;

		return $this;
	}

	/**
	 * @return Collection|User[]
	 */
	public function getUsers():Collection {
		return $this->users;
	}

	public function addUser(User $user):self {
		if (!$this->users->contains($user)) {
			$this->users[] = $user;
			$user->setFonction($this);
		}

		return $this;
	}

	public function removeUser(User $user):self {
		if ($this->users->contains($user)) {
			$this->users->removeElement($user);
			// set the owning side to null (unless already changed)
			if ($user->getFonction() === $this) {
				$user->setFonction(null);
			}
		}

		return $this;
	}
	public function __toString() {
		return $this->terme;
	}
}
